<?php

/**
 * @file
 * Module used to integrate Pydio and Islandora.
 */

define('ISLANDORA_PYDIO_BRIDGE_INGEST_PATH', 'islandora_pydio_bridge/ingest');
define('ISLANDORA_PYDIO_BRIDGE_XACML_FOLDER', '/xacml');
define('ISLANDORA_PYDIO_BRIDGE_PYDIO_URI', 'http://pyd.io#');
define('ISLANDORA_PYDIO_BRIDGE_PYDIO_FRAME', 'pydio_bridge/pydio');

/**
 * Implements hook_menu().
 */
function islandora_pydio_bridge_menu() {
  $items = array();

  $items[ISLANDORA_PYDIO_BRIDGE_INGEST_PATH] = array(
    'title' => 'Ingest',
    'access callback' => 'islandora_pydio_bridge_access_callback',
    'page callback' => 'islandora_pydio_bridge_ingest',
    'file' => 'includes/pydio_ingest.inc',
    'type' => MENU_CALLBACK,
  );
  $items[ISLANDORA_PYDIO_BRIDGE_PYDIO_FRAME] = array(
    'title' => 'Islandora Pydio Bridge',
    'access callback' => 'islandora_pydio_bridge_access_callback',
    'page callback' => 'drupal_goto',
    'page arguments' => array(variable_get("islandora_pydio_bridge_pydio_path", 'pydio')),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/islandora/islandora_pydio_bridge'] = array(
    'title' => 'Islandora Pydio Bridge Settings',
    'description' => 'Configure settings for the Islandora Pydio Bridge module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_pydio_bridge_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
  );

  return $items;
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_pydio_bridge_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora');
  // Root Collection.
  $pydio_data_collection = $connection->repository->constructObject('islandora:pydio_data_top');
  $pydio_data_collection->owner = 'fedoraAdmin';
  $pydio_data_collection->label = 'Research Data Collections';
  $pydio_data_collection->models = 'islandora:collectionCModel';
  // Collection Policy Datastream.
  $datastream = $pydio_data_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_collection_policy.xml", FALSE);
  $pydio_data_collection->ingestDatastream($datastream);
  // Add to root collection
  $pydio_data_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // TN Datastream.
  $datastream = $pydio_data_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $pydio_data_collection->ingestDatastream($datastream);
  return array(
    'islandora_pydio_bridge' => array(
      'title' => 'Islandora Pydio Bridge Data Collection',
      'objects' => array($pydio_data_collection),
    ),
  );
}

function islandora_pydio_bridge_user_view($account, $view_mode) {
  $collection_pid = empty($account->data['islandora_pydio_bridge_person_data_collection']) ? NULL :
    $account->data['islandora_pydio_bridge_person_data_collection'];
  if (!empty($collection_pid)) {
    $collection_link = l($collection_pid, "islandora/object/$collection_pid");
    $account->content['islandora_pydio_bridge_user_collection'] = array(
      '#type' => 'user_profile_category',
      '#title' => 'Personal Research Data Collection',
      'research_data_collection' => array(
        '#markup' => t("Your Personal Data Collection ID is !collection_pid.",
          array('!collection_pid' => $collection_link)),
        '#type' => 'user_profile_item',
        '#title' => 'Personal Collection ID',
      ),
      '#weight' => 10,
    );
  }
  $entity_pid = empty($account->data['islandora_pydio_bridge_person_entity']) ? NULL :
    $account->data['islandora_pydio_bridge_person_entity'];
  if (!empty($entity_pid)) {
    $entity_link = l($entity_pid, "islandora/object/$entity_pid");
    $account->content['islandora_pydio_bridge_person_entity'] = array(
      '#type' => 'user_profile_category',
      '#title' => 'Personal Entity Object',
      'entity_data_object' => array(
        '#markup' => t("Your Entity Object ID is !entity_pid.",
          array('!entity_pid' => $entity_link)),
        '#type' => 'user_profile_item',
        '#title' => 'Personal Entity ID',
      ),
      '#weight' => 10,
    );
  }
}

/**
 * Implements user_login hook.
 *
 * If you user logs in and does not have a corresponding Islandora personCModel
 * object we will create one.
 *
 * TODO on user deletion should we remove the users fedora data?
 *
 * @param array $edit
 *   The array of form values submitted by the user
 * @param object $account
 *   the users object
 */
function islandora_pydio_bridge_user_login(&$edit, $account) {
  module_load_include('inc', 'islandora_pydio_bridge', 'includes/person');
  if (empty($account->data['islandora_pydio_bridge_person_entity'])) {
    try {
      $person_object = islandora_pydio_bridge_create_person($account);
    }
    catch (Exception $e) {
      watchdog("islandora_pydio_bridge", "Failed to create an Islandora Person
    object for %user, %message", array(
        "%user" => $account->name,
        "%message" => $e->getMessage()
      ), WATCHDOG_ERROR, NULL);
    }
    if (!empty($person_object)) {
      $person_data = array('data' => array('islandora_pydio_bridge_person_entity' => $person_object->id));
      user_save($account, $person_data);
      watchdog("islandora_pydio_bridge", "Successfully created an Islandora Person
    object for %user with Islandora id of %pid", array(
        "%user" => $account->name,
        "%pid" => $person_object->id
      ), WATCHDOG_INFO, NULL);
    }
  }

  if (empty($account->data['islandora_pydio_bridge_person_data_collection'])) {
    try {
      $person_collection_object = islandora_pydio_bridge_create_user_subcollection($account);
    }
    catch (Exception $e) {
      watchdog("islandora_pydio_bridge", "Failed to create an Islandora
    Data Collection for %user, %message", array(
        "%user" => $account->name,
        "%message" => $e->getMessage()
      ), WATCHDOG_ERROR, NULL);
    }

    if (!empty($person_collection_object)) {
      $person_collection_data = array('data' => array('islandora_pydio_bridge_person_data_collection' => $person_collection_object->id));
      user_save($account, $person_collection_data);
      watchdog("islandora_pydio_bridge", "Successfully created an Islandora
    Data Collection for %user with Islandora id of %pid", array(
        "%user" => $account->name,
        "%pid" => $person_collection_object->id
      ), WATCHDOG_INFO, NULL);
    }
  }
}


/**
 * Menu access callback.
 */
function islandora_pydio_bridge_access_callback() {
  global $user;
  // TODO update this so it gets the correct collection object from the drupal db (we now store each users own collection object
  // in their drupal user object
  $object = islandora_object_load(variable_get('islandora_pydio_bridge_repository_pid', 'islandora:pydio_data_top'));
  return in_array('authenticated user', $user->roles) && islandora_object_access(ISLANDORA_INGEST, $object, $user);
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_pydio_bridge_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_pydio_bridge');
  return array(
    'Islandora Pydio Bridge DDI form' => array(
      'form_file' => "$module_path/xml/DDI-3.2-Lifecycle-Form.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_pydio_bridge_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_pydio_bridge_generic_form' => array(
      'content_model' => 'islandora:binaryObjectCModel',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_basic_image_form' => array(
      'content_model' => 'islandora:sp_basic_image',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_large_image_form' => array(
      'content_model' => 'islandora:sp_large_image_cmodel',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_pdf_form' => array(
      'content_model' => 'islandora:sp_pdf',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_video_form' => array(
      'content_model' => 'islandora:sp_videoCModel',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_audio_form' => array(
      'content_model' => 'islandora:sp-audioCModel',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
    'islandora_pydio_bridge_data_form' => array(
      'content_model' => 'islandora:sp_data',
      'form_name' => 'Islandora Pydio Bridge DDI form',
      'dsid' => 'DDI',
      'title_field' => array('Citation', 'Title', 'Title-String'),
      'transform' => 'ddi_to_dc.xsl',
      //'self_transform' => 'cleanup_ddi.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_get_transforms().
 */
function islandora_pydio_bridge_xml_form_builder_get_transforms() {
  $module_path = drupal_get_path('module', 'islandora_pydio_bridge');
  return array(
    'ddi_to_dc.xsl' => "$module_path/xml/ddi_to_dc.xsl",
  );
}

/**
 * Implements hook_xml_form_builder_get_self_transforms().
 */
function islandora_pydio_bridge_xml_form_builder_get_self_transforms() {
  $module_path = drupal_get_path('module', 'islandora_pydio_bridge');
  return array(
    'cleanup_ddi.xsl' => "$module_path/xml/cleanup_ddi.xsl",
  );
}
